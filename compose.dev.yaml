name: luxlife
services:
  # Nginx container | All environment
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_dev_nginx
    build:
      context: .
      dockerfile: docker/nginx/dev/Dockerfile
    ports:
      - "8080:80"
    networks:
      - symfony
    volumes:
      - ./:/srv/${COMPOSE_PROJECT_NAME}/
    depends_on:
      - php
    restart: unless-stopped

  # Php container | All environment
  php:
    container_name: ${COMPOSE_PROJECT_NAME}_dev_php
    build:
      context: .
      dockerfile: docker/php/dev/Dockerfile
    networks:
      - symfony
    volumes:
      - ./:/srv/${COMPOSE_PROJECT_NAME}/
    healthcheck:
      test: [ "CMD", "/bin/sh", "-c", "if [ -d /srv/$${COMPOSE_PROJECT_NAME}/bin ]; then exit 0; else exit 1; fi" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      database:
        condition: service_healthy
        restart: true
    restart: unless-stopped

  # PostgreSQL database container | Only in dev environment
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_dev_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-luxlife}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-azaz5412sa5421saz}
      POSTGRES_USER: ${POSTGRES_USER:-ad_luxlife}
    volumes:
      - db-data:/var/lib/postgresql@15/data:rw
    ports:
      - "5432:5432"
    networks:
      - symfony
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ad_luxlife -d luxlife -h localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Pgadmin container | Only in dev environment
  pgadmin:
    image: dpage/pgadmin4
    container_name: ${COMPOSE_PROJECT_NAME}_dev_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - symfony
    depends_on:
      - nginx
    restart: unless-stopped

  mailer:
    container_name: ${COMPOSE_PROJECT_NAME}_dev_mailer
    image: schickling/mailcatcher
    ports:
      - "1025:1080"
    networks:
      - symfony
    depends_on:
      - php
    restart: unless-stopped

  # Cron container
  cron:
    container_name: ${COMPOSE_PROJECT_NAME}_dev_cron
    build:
      context: .
      dockerfile: docker/cron/Dockerfile
    entrypoint: /usr/sbin/crond
    command: [ "-f", "-l", "2", "-L", "/dev/stdout" ]
    volumes:
      - ./docker/cron/cron.logs:/var/log/cron.logs
    depends_on:
      - pgadmin
    networks:
      - symfony
    restart: always

networks:
  symfony:
    driver: bridge

volumes:
  db-data:
  pgadmin: