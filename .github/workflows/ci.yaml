name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  DOCKER_COMP: docker compose -f compose.dev.yaml
  PHP_CONT: ${{ env.DOCKER_COMP }} exec -T php

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker images
        uses: docker/bake-action@v4
        with:
          pull: true
          load: true
          files: |
            compose.dev.yaml
            compose.override.yaml
      - name: Start services
        run: ${{ env.DOCKER_COMP }} up --build --wait
      - name: Ls current folder
        run: ls -la
      - name: LS in PHP container
        run: docker compose -f compose.dev.yaml exec -T php ls -la
      - name: Install dependencies for composer # (ToDo) Remove this (because it is normally executed during "docker compose up")
        run: docker compose -f compose.dev.yaml exec -T php composer install --no-interaction --no-plugins --no-scripts --no-dev --prefer-dist
      - name: Run PHPStan
        run: docker compose -f compose.dev.yaml exec -T php vendor/bin/phpstan analyse --level max
      - name: Run PHPCs-fixer
        run: ${{ env.PHP_CONT }} vendor/bin/php-cs-fixer fix
      - name: Create test database
        if: false # Remove this line if Doctrine ORM is installed
        run: ${{ env.PHP_CONT }} bin/console -e test doctrine:database:create
      - name: Run migrations
        if: false # Remove this line if Doctrine Migrations is installed
        run: ${{ env.PHP_CONT }} bin/console -e test doctrine:migrations:migrate --no-interaction
      - name: Run PHPUnit
        if: false # Remove this line if PHPUnit is installed
        run: ${{ env.PHP_CONT }} bin/phpunit
      - name: Doctrine Schema Validator
        if: false # Remove this line if Doctrine ORM is installed
        run: ${{ env.PHP_CONT }} bin/console -e test doctrine:schema:validate
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint Dockerfile Nginx
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: nginx/dev/Dockerfile
      - name: Lint Dockerfile PHP
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: php/dev/Dockerfile
